name: Build and Test

on:
  pull_request:
    paths:
      - '**/Dockerfile'
      - '!.devcontainer/Dockerfile'
      - '**/DevelPatchPerl.patch'

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - id: generate
        name: Enumerate Dockerfiles
        run: |
          matrix="$(dirname */Dockerfile | sort -rn | jq -csR 'rtrimstr("\n") | split("\n") | { directory: . }')"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-image:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    name: ${{ matrix.directory }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Clone docker-library/official-images (for testing)
        run: |
          git clone --depth 1 --single-branch https://github.com/docker-library/official-images.git

      - name: Build image
        run: |
          docker version
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          docker buildx build --progress=plain -t "$img" "$dir"

      - name: Inspect image creation and tag time
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          docker image inspect --format '{{.Created}}' "$img"
          docker image inspect --format '{{.Metadata.LastTagTime}}' "$img"

      - name: Run tests from docker-library/official-images
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          ./official-images/test/run.sh "$img"

      - name: Run HTTPS access test
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          docker run "$img" perl -MHTTP::Tiny -E 'if (HTTP::Tiny->new->get("https://github.com")->{status} == 200) { exit 0 } exit 1'

      - name: Run cpanm install test
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          if [[ "$dir" != *"slim"* ]]; then
            docker run "$img" cpanm -v Try::Tiny@0.30
            docker run "$img" cpanm -v Net::DNS@1.45_02
          fi
          docker run "$img" cpanm -v Mojolicious

      - name: Run cpanm no-lwp by default test
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          if [[ "$dir" != *"slim"* ]]; then
            docker run "$img" bash -c "cpanm -v -n LWP && cpanm -v -n local::lib"
          fi

      - name: Run cpm install test
        run: |
          dir='${{ matrix.directory }}'
          img="perl:${dir//,/-}"
          if [[ "$dir" != *"slim"* ]]; then
            docker run "$img" cpm install -v Try::Tiny@0.30
            docker run "$img" cpm install -v Net::DNS@1.45_02
          fi
          docker run "$img" cpm install -v Mojolicious
